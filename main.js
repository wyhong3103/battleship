(()=>{"use strict";function t(t,e=""){const n=document.createElement(t);return""!==e&&n.classList.add(e),n}function e(t){return document.querySelector(t)}function n(t){return document.querySelectorAll(t)}function o(t,o=!1){if(o){const e=n(t);for(let t=0;t<e.length;t++){const n=e[t],o=e[t].cloneNode(!0);n.parentNode.replaceChild(o,n)}}else{const n=e(t),o=n,i=n.cloneNode(!0);o.parentNode.replaceChild(i,o)}}const i=(t,e,n)=>{let o=0,i=e,r=n;return{hit:function(){o+=1},isSunk:function(){return o===t},shipLength:t,setHead:function(t){i=t},getHead:function(){return i},setHor:function(t){r=t},getHor:function(){return r}}},r=()=>{const t=(()=>{const t=[],e=[];let n=[],o=0;function r(e,n){return e<0||n<0||e>=t.length||n>=t.length}function a(e,n,o,i){if(r(e,n)||r(o,i))return!0;if(o<e||i<n)return!0;const a=[-1,-1,0,1,1,1,0,-1],l=[0,1,1,1,0,-1,-1,-1];if(e===o)for(let o=n;o<=i;o++)for(let n=0;n<8;n++)if(!(o+l[n]<0||e+a[n]<0||o+l[n]>=10||e+a[n]>=10)&&-1!==t[e+a[n]][o+l[n]])return!0;if(n===i)for(let i=e;i<=o;i++)for(let e=0;e<8;e++)if(!(n+l[e]<0||i+a[e]<0||n+l[e]>=10||i+a[e]>=10)&&-1!==t[i+a[e]][n+l[e]])return!0;return!1}function l(e,n,o,i){let r=!0;if(e===o)for(let o=n;o<=i;o++)-1!==t[e][o]&&(r=!1);else for(let i=e;i<=o;i++)-1!==t[i][n]&&(r=!1);return r}function d(t,e,n,o){return!(!o||a(e,n,e,n+t-1)||!l(e,n,e,n+t-1))||!(o||a(e,n,e+t-1,n)||!l(e,n,e+t-1,n))}return function(){for(let e=0;e<10;e++){const e=[];for(let t=0;t<10;t++)e.push(-1);t.push(e)}for(let t=0;t<10;t++){const t=[];for(let e=0;e<10;e++)t.push(-1);e.push(t)}}(),{placeShip:function(e,r,a,l,c=-1){const s=-1===c?n.length:c;if(l&&d(e,r,a,l)){for(let n=a;n<a+e;n++)t[r][n]=s;-1===c?n.push(i(e,[r,a],l)):(n[c].setHead([r,a]),n[c].setHor(l))}else{if(l||!d(e,r,a,l))return!1;for(let n=r;n<r+e;n++)t[n][a]=s;-1===c?n.push(i(e,[r,a],l)):(n[c].setHead([r,a]),n[c].setHor(l))}return-1===c&&(o+=1),!0},receiveAttack:function(i,a){return r(i,a)||-1!==e[i][a]?-1:(e[i][a]=1,-1!==t[i][a]?(n[t[i][a]].hit(),n[t[i][a]].isSunk()?(o-=1,3):2):1)},isGameOver:function(){return 0===o},isValidPlacement:d,shipAt:function(e,n){return t[e][n]},getShip:function(t){return t>=n.length?-1:n[t]},unplaceShip:function(e){const o=n[e].getHead()[0],i=n[e].getHead()[1],r=n[e].shipLength;if(n[e].getHor())for(let e=i;e<i+r;e++)t[o][e]=-1;else for(let e=o;e<o+r;e++)t[e][i]=-1},newShip:function(t){return n.push(i(t,-1,-1)),o+=1,n[n.length-1]},restartBoard:function(){for(let t=0;t<10;t++)for(let n=0;n<10;n++)e[t][n]=-1;o=n.length;const t=[];for(let e=0;e<n.length;e++)t.push(i(n[e].shipLength,n[e].getHead(),n[e].getHor()));n=t}}})();let e=0,n=[],o=[[-1,-1],[-1,-1]];const r=[],a=[];return function(){for(let t=0;t<10;t++)for(let e=0;e<10;e++)n.push([t,e]);n=function(t){let e,n=t.length;for(;0!==n;)e=Math.floor(Math.random()*n),n-=1,[t[n],t[e]]=[t[e],t[n]];return t}(n)}(),function(){for(let t=0;t<10;t++){const t=[];for(let e=0;e<10;e++)t.push(-1);a.push(t)}}(),{gameboard:t,randomAttack:function(t){let i=[-1,-1,-1];if(-1!==o[0][0]&&-1!==o[0][1]){if(o[0][0]===o[1][0]&&o[0][1]===o[1][1]){for(;-1===i[2];){const e=r.shift();i=[e[0],e[1],-1],i[2]=t.receiveAttack(e[0],e[1])}if(2===i[2]){for(;r.length>0;)r.pop();i[0]===o[0][0]?i[1]>o[0][1]?o[1]=[i[0],i[1]]:o[0]=[i[0],i[1]]:i[1]===o[0][1]&&(i[0]>o[0][0]?o[1]=[i[0],i[1]]:o[0]=[i[0],i[1]])}}else if(o[0][0]!==o[1][0]||o[0][1]!==o[1][1])if(o[0][0]===o[1][0]){for(i=[o[0][0],o[0][1],-1];i[1]>=0&&-1===i[2]&&(i[1]-=1,i[1]>=0&&-1===a[i[0]][i[1]]);)i[2]=t.receiveAttack(i[0],i[1]);if(i[2]>=2&&(o[0][1]-=1),-1===i[2]){for(i=[o[1][0],o[1][1],-1];i[1]<10&&-1===i[2]&&(i[1]+=1,i[1]<10&&-1===a[i[0]][i[1]]);)i[2]=t.receiveAttack(i[0],i[1]);i[2]>=2&&(o[1][1]+=1)}}else if(o[0][1]===o[1][1]){for(i=[o[0][0],o[0][1],-1];i[1]>=0&&-1===i[2]&&(i[0]-=1,i[0]>=0&&-1===a[i[0]][i[1]]);)i[2]=t.receiveAttack(i[0],i[1]);if(i[2]>=2&&(o[0][0]-=1),-1===i[2]){for(i=[o[1][0],o[1][1],-1];i[0]<10&&-1===i[2]&&(i[0]+=1,i[0]<10&&-1===a[i[0]][i[1]]);)i[2]=t.receiveAttack(i[0],i[1]);i[2]>=2&&(o[1][0]+=1)}}}else for(;-1===i[2];){if(i=[n[e][0],n[e][1],-1],-1===a[i[0]][i[1]]&&(i[2]=t.receiveAttack(i[0],i[1]),2===i[2])){o=[[i[0],i[1]],[i[0],i[1]]];const[t,e]=[i[0],i[1]],n=[1,-1,0,0],l=[0,0,1,-1];for(let o=0;o<4;o++)t+n[o]<0||t+n[o]>=10||e+l[o]<0||e+l[o]>=10||1===a[t+n[o]][e+l[o]]||r.push([t+n[o],e+l[o]])}e+=1}return 3===i[2]&&(o=[[-1,-1],[-1,-1]],function(t,e,n){const o=[-1,-1,0,1,1,1,0,-1],i=[0,1,1,1,0,-1,-1,-1],r=n.getShip(n.shipAt(t,e)),[l,d]=r.getHead();if(r.getHor())for(let t=d;t<d+r.shipLength;t++)for(let e=0;e<8;e++)l+o[e]<0||t+i[e]<0||l+o[e]>=10||t+i[e]>=10||(a[l+o[e]][t+i[e]]=1);else for(let t=l;t<l+r.shipLength;t++)for(let e=0;e<8;e++)t+o[e]<0||d+i[e]<0||t+o[e]>=10||d+i[e]>=10||(a[t+o[e]][d+i[e]]=1)}(i[0],i[1],t)),a[i[0]][i[1]]=1,i},generateRandomShip:function(){const e=[2,3,3,4,5];for(;e.length>0;){const n=e[e.length-1],[o,i]=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],r=1===Math.floor(2*Math.random());t.isValidPlacement(n,o,i,r)&&(t.placeShip(n,o,i,r),e.pop())}}}},a=(()=>{const o=e("#content");return{prepPage:function(){o.innerHTML="";const e=t("div","main"),n=t("h1","title");n.textContent="BATTLESHIP";const i=t("div","prep-container"),r=t("div","prep-left"),a=t("div","grid");for(let e=0;e<100;e++){const e=t("div","cell");a.appendChild(e)}r.appendChild(a);const l=t("div","prep-right"),d=t("div","remaining");for(let e=0;e<20;e++){const e=t("div","cell-remain");d.appendChild(e)}const c=t("button","ready-btn");c.textContent="READY",l.appendChild(d),l.appendChild(c),i.appendChild(r),i.appendChild(l);const s=t("div","footer"),p=t("p");p.textContent="Made By";const h=t("a");h.setAttribute("href","https://github.com/wyhong3103");const g=t("img","github-svg");g.src="./assets/github.svg";const f=t("p");f.textContent="wyhong3103",h.appendChild(g),h.appendChild(f),s.appendChild(p),s.appendChild(h),e.appendChild(n),e.appendChild(i),e.appendChild(s),o.appendChild(e)},paintStock:function(o){!function(){const n=e(".remaining");n.innerHTML="";for(let e=0;e<20;e++){const e=t("div","cell-remain");n.appendChild(e)}}();const i=n(".remaining .cell-remain");let r=0,a=0;for(let t=0;t<o.length;t++){a+o[t]>=10&&(r+=1,a=0);for(let e=a;e<a+o[t];e++)i[10*r+e].classList.add(`block${o[t]}`),e===a&&i[10*r+e].classList.add("cell-remain-left");a+=o[t]}},paintBoard:function(o,i=-1){!function(n=-1){let o="";o=1===n?".player-grid":2===n?".opp-grid":".grid";const i=e(o);i.innerHTML="";for(let e=0;e<100;e++){const e=t("div","cell");i.appendChild(e)}}(i);let r="";r=1===i?".player-grid":2===i?".opp-grid":".grid";const a=n(`${r} .cell`);for(let t=0;t<10;t++)for(let e=0;e<10;e++)-1!==o.shipAt(t,e)&&a[10*t+e].classList.add(`block${o.getShip(o.shipAt(t,e)).shipLength}`)},paintCurrent:function(o){!function(){const n=e(".current");n.innerHTML="";for(let e=0;e<6;e++){const e=t("div","cell-current");n.appendChild(e)}}();const i=n(".cell-current");for(let t=0;t<o;t++)i[t].classList.add(`block${o}`)},allowStart:function(){const n=e(".prep-right");n.innerHTML="";const o=t("button","start-btn");o.textContent="START",n.appendChild(o)},addCurrent:function(){const n=e(".prep-right");n.removeChild(n.lastChild);const o=t("div","current-container"),i=t("h3","current-text");i.textContent="CURRENT SHIP";const r=t("div","current");for(let e=0;e<6;e++){const e=t("div","cell-current");r.appendChild(e)}const a=t("button","done-btn"),l=t("img","done-svg");l.src="./assets/tick.svg",a.appendChild(l),o.appendChild(i),o.appendChild(r),o.appendChild(a),n.appendChild(o)},battlePage:function(){o.innerHTML="";const e=t("div","main"),n=t("h1","title");n.textContent="BATTLESHIP";const i=t("div","grid-container"),r=t("div","player-grid");for(let e=0;e<100;e++){const e=t("div","cell");r.appendChild(e)}const a=t("div","opp-grid");for(let e=0;e<100;e++){const e=t("div","cell");a.appendChild(e)}i.appendChild(r),i.appendChild(a);const l=t("div","game-btn-container"),d=t("button","restart-btn"),c=t("button","exit-btn");d.textContent="RESTART",c.textContent="EXIT",l.appendChild(d),l.appendChild(c);const s=t("div","footer"),p=t("p");p.textContent="Made By";const h=t("a");h.setAttribute("href","https://github.com/wyhong3103");const g=t("img","github-svg");g.src="./assets/github.svg";const f=t("p");f.textContent="wyhong3103",h.appendChild(g),h.appendChild(f),s.appendChild(p),s.appendChild(h),e.appendChild(n),e.appendChild(i),e.appendChild(l),e.appendChild(s),o.appendChild(e)},paintHit:function(t,e,o,i=-1){let r="";r=1===i?".player-grid":2===i?".opp-grid":".grid";const a=n(`${r} .cell`);1===o?a[e].textContent="Â·":o>=2&&(a[e].textContent="X"),3===o&&function(t,e,o,i=-1){let r="";r=1===i?".player-grid":2===i?".opp-grid":".grid";const a=n(`${r} .cell`);if(o)for(let n=0;n<t;n++)a[e+n].classList.add(`block${t}`);else for(let n=0;n<t;n++)a[e+10*n].classList.add(`block${t}`)}(t.shipLength,10*t.getHead()[0]+t.getHead()[1],t.getHor(),i)},displayMsg:function(e){!function(){const e=t("div","hide-bg");o.appendChild(e)}();const n=t("div","msg-container"),i=t("div","msg-box"),r=t("h3","msg");r.textContent=e;const a=t("button","ok-btn");a.textContent="OK!",i.appendChild(r),i.appendChild(a),n.appendChild(i),o.appendChild(n)}}})(),l=a,d=(()=>{let t=null,i=null,a=[],d=-1,c=0,s=null;function p(){const e=n(".cell");for(let n=0;n<e.length;n++)e[n].addEventListener("mouseover",(()=>{const o=t.gameboard.getShip(d);if(-1===t.gameboard.shipAt(Math.floor(n/10),n%10)&&t.gameboard.isValidPlacement(o.shipLength,Math.floor(n/10),n%10,o.getHor()))if(t.gameboard.placeShip(o.shipLength,Math.floor(n/10),n%10,o.getHor(),d),o.getHor())for(let t=0;t<o.shipLength;t++)e[n+t].classList.add(`block${o.shipLength}`);else for(let t=0;t<o.shipLength;t++)e[n+10*t].classList.add(`block${o.shipLength}`)})),e[n].addEventListener("mouseout",(()=>{const o=t.gameboard.getShip(d);if(t.gameboard.shipAt(Math.floor(n/10),n%10)===d)if(t.gameboard.unplaceShip(d),o.getHor())for(let t=0;t<o.shipLength;t++)e[n+t].classList.remove(`block${o.shipLength}`);else for(let t=0;t<o.shipLength;t++)e[n+10*t].classList.remove(`block${o.shipLength}`)})),e[n].addEventListener("click",(()=>{t.gameboard.shipAt(Math.floor(n/10),n%10)===d&&(d=-1,l.paintBoard(t.gameboard),h())}))}function h(){const e=n(".cell");for(let n=0;n<e.length;n++)e[n].addEventListener("click",(()=>{c+=1,1===c?s=setTimeout((()=>{-1!==t.gameboard.shipAt(Math.floor(n/10),n%10)&&(d=t.gameboard.shipAt(Math.floor(n/10),n%10),t.gameboard.unplaceShip(t.gameboard.shipAt(Math.floor(n/10),n%10)),l.paintBoard(t.gameboard),p()),c=0}),200):(clearTimeout(s),(()=>{if(-1!==t.gameboard.shipAt(Math.floor(n/10),n%10)){const e=t.gameboard.shipAt(Math.floor(n/10),n%10),o=t.gameboard.getShip(e);t.gameboard.unplaceShip(e),t.gameboard.isValidPlacement(o.shipLength,o.getHead()[0],o.getHead()[1],!o.getHor())?(t.gameboard.placeShip(o.shipLength,o.getHead()[0],o.getHead()[1],!o.getHor(),e),l.paintBoard(t.gameboard),h()):t.gameboard.placeShip(o.shipLength,o.getHead()[0],o.getHead()[1],o.getHor(),e)}})(),c=0)}))}function g(){e(".start-btn").addEventListener("click",(()=>{l.battlePage(),i.generateRandomShip(),l.paintBoard(t.gameboard,1),v(),L()}))}function f(){t=r(),i=r(),a=[2,3,3,4,5],l.prepPage(),l.paintStock(a),l.paintBoard(t.gameboard),e(".ready-btn").addEventListener("click",(()=>{l.addCurrent(),e(".done-btn").addEventListener("click",(()=>{if(-1===d&&a.length>0){d=5-a.length;const e=a[a.length-1];t.gameboard.newShip(e),a.pop(),l.paintCurrent(e),l.paintStock(a),o(".grid .cell",!0),p()}else 0===a.length&&(l.allowStart(),g())})),d=0,t.gameboard.newShip(5),a.pop(),l.paintCurrent(5),l.paintStock(a),p()}))}let u=0;function m(){e(".ok-btn").addEventListener("click",(()=>{const t=e("#content");t.removeChild(t.lastChild),t.removeChild(t.lastChild)}))}function b(t){o(".player-grid .cell",!0),o(".opp-grid .cell",!0),l.displayMsg((1===t?"Player":"AI")+" have won the game! Press restart if you wish to restart the game with current setting. Otherwise, exit."),m()}function C(){const e=i.randomAttack(t.gameboard);1===e[2]?l.paintHit(-1,10*e[0]+e[1],e[2],1):e[2]>=2&&l.paintHit(t.gameboard.getShip(t.gameboard.shipAt(e[0],e[1])),10*e[0]+e[1],e[2],1),u=0,t.gameboard.isGameOver()&&b(0)}function v(){const t=n(".opp-grid .cell");for(let e=0;e<t.length;e++)t[e].addEventListener("click",(()=>{if(0===u){const t=i.gameboard.receiveAttack(Math.floor(e/10),e%10);-1!==t&&(1===t?l.paintHit(-1,e,t,2):t>=2&&l.paintHit(i.gameboard.getShip(i.gameboard.shipAt(Math.floor(e/10),e%10)),e,t,2),u=1,i.gameboard.isGameOver()&&b(1),C())}}))}function L(){e(".restart-btn").addEventListener("click",(()=>{t.gameboard.restartBoard(),i=r(),l.battlePage(),i.generateRandomShip(),l.paintBoard(t.gameboard,1),v(),L()})),e(".exit-btn").addEventListener("click",(()=>{f()}))}return{init:function(){f(),l.displayMsg("Welcome to BATTLESHIP! Place your ships and ready for war! Click the ship one time to relocate it! Double click it to rotate it!"),m()}}})();d.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,